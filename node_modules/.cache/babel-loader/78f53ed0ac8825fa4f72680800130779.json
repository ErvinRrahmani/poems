{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport { useRecoilState } from \"recoil\";\nimport { darkModeState } from \"../../shared/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: 1\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [singlePoem, setSinglePoem] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Listing\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Poems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Poem Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n              var _poem$lines;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"row\",\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: poem === null || poem === void 0 ? void 0 : poem.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: poem === null || poem === void 0 ? void 0 : poem.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: BUTTON_WRAPPER_STYLES,\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setIsOpen(true);\n                      setSinglePoem(poem);\n                    },\n                    children: \"Open Modal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    poemSingleData: singlePoem,\n                    open: isOpen,\n                    onClose: () => setIsOpen(false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 33\n                }, this)]\n              }, poem.lines.toString().length, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"qOomfEBNG72SuixhTVvEtqUQRpQ=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["useState","Modal","useRecoilState","darkModeState","BUTTON_WRAPPER_STYLES","position","zIndex","Listing","poems","isOpen","setIsOpen","singlePoem","setSinglePoem","map","poem","i","title","author","lines","slice","toString","length"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;;AAGA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,UADgB;AACJC,EAAAA,MAAM,EAAE;AADJ,CAA9B;AAIA,eAAe,SAASC,OAAT,OAA0B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAErC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEA,sBAAQ;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,wBAAjB;AAAA,gCACI;AAAA,iCACA;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,iCACA;AAAA,sBACKQ,KADL,aACKA,KADL,uBACKA,KAAK,CAAEK,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AAAA;;AACrB,kCAAQ;AAAA,wCACA;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA,4BAAiBA,CAAC,GAAG;AAArB;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAA,4BAAKD,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEE;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAA,4BAAKF,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEG;AAAX;AAAA;AAAA;AAAA;AAAA,wBAHA,eAIA;AAAA,6BAAKH,IAAL,aAAKA,IAAL,sCAAKA,IAAI,CAAEI,KAAX,gDAAK,YAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA,eAKA;AAAK,kBAAA,KAAK,EAAEf,qBAAZ;AAAA,0CACI;AACI,oBAAA,OAAO,EAAE,MAAM;AACXM,sBAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,sBAAAA,aAAa,CAACE,IAAD,CAAb;AACH,qBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAQI,QAAC,KAAD;AACI,oBAAA,cAAc,EAAEH,UADpB;AAEI,oBAAA,IAAI,EAAEF,MAFV;AAGI,oBAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD;AAH5B;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALA;AAAA,iBAASI,IAAI,CAACI,KAAL,CAAWE,QAAX,GAAsBC,MAA/B;AAAA;AAAA;AAAA;AAAA,sBAAR;AAqBH,aAtBA;AADL;AADA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AA0CH;;GA/CuBd,O;;KAAAA,O","sourcesContent":["import './Listing.scss'\nimport {useState} from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport {useRecoilState} from \"recoil\";\nimport {darkModeState} from \"../../shared/GlobalState\";\n\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative', zIndex: 1\n}\n\nexport default function Listing({poems}) {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [singlePoem, setSinglePoem] = useState('')\n\n    return (<>\n        <div className=\"Listing\">\n            <table className=\"table table-borderless\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author</th>\n                    <th scope=\"col\">Poems</th>\n                    <th scope=\"col\">Poem Details</th>\n                </tr>\n                </thead>\n                <tbody>\n                <>\n                    {poems?.map((poem, i) => {\n                        return (<tr key={poem.lines.toString().length}>\n                                <th scope=\"row\">{i + 1}</th>\n                                <td>{poem?.title}</td>\n                                <td>{poem?.author}</td>\n                                <td>{poem?.lines?.slice(0, 5)} -...</td>\n                                <div style={BUTTON_WRAPPER_STYLES}>\n                                    <button\n                                        onClick={() => {\n                                            setIsOpen(true);\n                                            setSinglePoem(poem)\n                                        }}\n                                    >Open Modal\n                                    </button>\n                                    <Modal\n                                        poemSingleData={singlePoem}\n                                        open={isOpen}\n                                        onClose={() => setIsOpen(false)}\n                                    />\n                                </div>\n                            </tr>\n                        )\n                    })}\n                </>\n                </tbody>\n            </table>\n        </div>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}