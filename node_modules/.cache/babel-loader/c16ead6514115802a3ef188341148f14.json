{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport { useRecoilState } from \"recoil\";\nimport { darkModeState } from \"../../shared/GlobalState\";\nimport Loader from \"../Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: 1\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems,\n    isLoading\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [singlePoem, setSinglePoem] = useState('');\n  const [favouritePoems, setFavouritePoems] = useState([]);\n  const [noDub, setnoDub] = useState([]);\n  let favPoems = [];\n\n  const addToPoems = poems => {\n    setFavouritePoems(favPoems => [...favPoems, poems]);\n    if (favPoems.includes(poems) === false) favPoems.push(poems);\n  };\n\n  console.log('NO DUPLICATES ', noDub);\n  const favItems = favouritePoems === null || favouritePoems === void 0 ? void 0 : favouritePoems.map((el, i) => {\n    console.log(el);\n    return el;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Listing\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col-2\",\n              children: \"Poems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Poem Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Favourites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            var _poem$lines;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: BUTTON_WRAPPER_STYLES,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"modal-open-button\",\n                  onClick: () => {\n                    setIsOpen(true);\n                    setSinglePoem(poem);\n                  },\n                  children: \"Open Modal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  poemSingleData: singlePoem,\n                  open: isOpen,\n                  onClose: () => setIsOpen(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => addToPoems(poem),\n                  className: \"add-to-favourites\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, poem.lines.toString().length, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"VHcer9tBHY5eEXamoL/tdMEl1J0=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["useState","Modal","useRecoilState","darkModeState","Loader","BUTTON_WRAPPER_STYLES","position","zIndex","Listing","poems","isLoading","isOpen","setIsOpen","singlePoem","setSinglePoem","favouritePoems","setFavouritePoems","noDub","setnoDub","favPoems","addToPoems","includes","push","console","log","favItems","map","el","i","poem","title","author","lines","slice","toString","length"],"mappings":"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","sourcesContent":["import './Listing.scss'\nimport {useState} from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport {useRecoilState} from \"recoil\";\nimport {darkModeState} from \"../../shared/GlobalState\";\nimport Loader from \"../Loader/Loader\";\n\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative', zIndex: 1\n}\n\nexport default function Listing({poems, isLoading}) {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [singlePoem, setSinglePoem] = useState('')\n    const [favouritePoems, setFavouritePoems] = useState([])\n    const [noDub, setnoDub] = useState([])\n\n    let favPoems = []\n    const addToPoems = (poems) => {\n\n        setFavouritePoems(favPoems => [...favPoems, poems])\n        if (favPoems.includes(poems) === false) favPoems.push(poems);\n\n\n    }\n    console.log('NO DUPLICATES ', noDub)\n\n\n    const favItems = favouritePoems?.map((el, i) => {\n        console.log(el)\n        return el\n    })\n\n\n\n    return (<>\n        {isLoading ? <Loader/> :\n            <div className=\"Listing\">\n                <table className=\"table table-borderless\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Author</th>\n                        <th scope=\"col-2\">Poems</th>\n                        <th scope=\"col\">Poem Details</th>\n                        <th scope=\"col\">Favourites</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {poems?.map((poem, i) => {\n                        return (<tr key={poem.lines.toString().length}>\n                                <th scope=\"row\">{i + 1}</th>\n                                <td>{poem?.title}</td>\n                                <td>{poem?.author}</td>\n                                <td>{poem?.lines?.slice(0, 5)} -...</td>\n                                <div style={BUTTON_WRAPPER_STYLES}>\n                                    <button\n                                        className=\"modal-open-button\"\n                                        onClick={() => {\n                                            setIsOpen(true);\n                                            setSinglePoem(poem)\n                                        }}\n                                    >Open Modal\n                                    </button>\n                                    <Modal\n                                        poemSingleData={singlePoem}\n                                        open={isOpen}\n                                        onClose={() => setIsOpen(false)}\n                                    />\n                                </div>\n                                <td>\n                                    <button type=\"button\" onClick={() => addToPoems(poem)}\n                                            className=\"add-to-favourites\">\n                                        +\n                                    </button>\n                                </td>\n\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        }\n    </>)\n}"]},"metadata":{},"sourceType":"module"}