{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport './Navbar.scss';\nimport Listing from \"../Listing/Listing\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport SearchInput from \"../SearchInput/SearchInput\";\nimport Button from \"../Button/Button\";\nimport NavbarBrand from \"../NavbarBrand/NavbarBrand\";\nimport { useEffect, useState } from \"react\";\nimport axios from '../../utils/axios';\nimport { Audio } from 'react-loader-spinner';\nimport Loader from \"../Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n\n  const [poems, setPoems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [authorFilter, setAuthorFilter] = useState('');\n  const [authors, setAuthors] = useState([]);\n  const [titles, setTitles] = useState([]);\n\n  const getAuthors = async () => {\n    try {\n      var _response$data;\n\n      let response = await axios.get('author');\n      setAuthors(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.authors);\n      console.log('zzzzzzzzzzzzz poems', response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getPoemsTitle = async () => {\n    try {\n      var _response$data2;\n\n      let response = await axios.get('title');\n      setTitles(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.titles);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // console.log('title poems', titles)\n\n\n  const fetch20Poems = async event => {\n    event.preventDefault();\n\n    try {\n      let response = await axios.get('random/20');\n      setPoems(response === null || response === void 0 ? void 0 : response.data);\n      setIsLoading(false); // isLoading = false\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterByArtistAndTitle = async () => {\n    try {\n      let response = await axios.get('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterByAuthor = async event => {\n    console.log(event);\n\n    try {\n      let response = await axios.get(`author/${authorFilter}`);\n      setPoems(response === null || response === void 0 ? void 0 : response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterByTitle = async () => {\n    try {\n      let response = await axios.get('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAuthors();\n    getPoemsTitle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"Navbar navbar navbar-expand-lg navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          brandName: \"Poems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"element-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            name: \"Sort By Author\",\n            poemsData: authors,\n            onChangeState: filterByAuthor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            name: \"Sort By Title\",\n            poemsData: titles,\n            onChangeState: setAuthorFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SearchInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            name: \"Fetch 20 poems\",\n            type: \"button\",\n            onClickFunction: fetch20Poems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Listing, {\n        poems: poems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Navbar, \"Z2NZP3xeTLsuaMtER3i3FY0O9n0=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Navbar/Navbar.js"],"names":["Listing","Dropdown","SearchInput","Button","NavbarBrand","useEffect","useState","axios","Audio","Loader","Navbar","poems","setPoems","isLoading","setIsLoading","titleFilter","setTitleFilter","authorFilter","setAuthorFilter","authors","setAuthors","titles","setTitles","getAuthors","response","get","data","console","log","error","getPoemsTitle","fetch20Poems","event","preventDefault","filterByArtistAndTitle","filterByAuthor","filterByTitle"],"mappings":"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","sourcesContent":["import './Navbar.scss'\nimport Listing from \"../Listing/Listing\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport SearchInput from \"../SearchInput/SearchInput\";\nimport Button from \"../Button/Button\";\nimport NavbarBrand from \"../NavbarBrand/NavbarBrand\";\nimport {useEffect, useState} from \"react\";\nimport axios from '../../utils/axios'\nimport {Audio} from 'react-loader-spinner'\nimport Loader from \"../Loader/Loader\";\n\nexport default function Navbar() {\n\n    const [poems, setPoems] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [titleFilter, setTitleFilter] = useState('')\n    const [authorFilter, setAuthorFilter] = useState('')\n    const [authors, setAuthors] = useState([])\n    const [titles, setTitles] = useState([])\n\n    const getAuthors = async () => {\n        try {\n            let response = await axios.get('author')\n            setAuthors(response?.data?.authors)\n            console.log('zzzzzzzzzzzzz poems', response)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getPoemsTitle = async () => {\n        try {\n            let response = await axios.get('title')\n            setTitles(response?.data?.titles)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // console.log('title poems', titles)\n\n    const fetch20Poems = async (event) => {\n        event.preventDefault()\n        try {\n            let response = await axios.get('random/20')\n            setPoems(response?.data)\n            setIsLoading(false)\n            // isLoading = false\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const filterByArtistAndTitle = async () => {\n        try {\n            let response = await axios.get('')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const filterByAuthor = async (event) => {\n        console.log(event)\n        try {\n            let response = await axios.get(`author/${authorFilter}`)\n            setPoems(response?.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const filterByTitle = async () => {\n        try {\n            let response = await axios.get('')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getAuthors();\n        getPoemsTitle();\n    }, [])\n\n    return (\n        <>\n            <nav className=\"Navbar navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    <NavbarBrand brandName=\"Poems\"/>\n                    <form className=\"element-wrapper\">\n                        <Dropdown name=\"Sort By Author\" poemsData={authors} onChangeState={filterByAuthor}/>\n                        <Dropdown name=\"Sort By Title\" poemsData={titles} onChangeState={setAuthorFilter}/>\n                        <SearchInput/>\n                        <Button name=\"Fetch 20 poems\" type=\"button\" onClickFunction={fetch20Poems}/>\n                    </form>\n                </div>\n            </nav>\n            {\n                isLoading ? <Loader/> :\n                    <div className=\"list-wrapper\">\n                        <Listing poems={poems}/>\n                    </div>\n            }\n        </>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}