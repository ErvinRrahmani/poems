{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport './Navbar.scss';\nimport Listing from \"../Listing/Listing\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport SearchInput from \"../SearchInput/SearchInput\";\nimport Button from \"../Button/Button\";\nimport NavbarBrand from \"../NavbarBrand/NavbarBrand\";\nimport { useEffect, useState } from \"react\";\nimport axios from '../../utils/axios';\nimport Modal from \"../Modal/Modal\";\nimport FavouriteModal from \"../FavouriteModal/FavouriteModal\";\nimport Loader from \"../Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: 1\n};\nexport default function Navbar() {\n  _s();\n\n  var _this = this;\n\n  const [poems, setPoems] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n  const [authors, setAuthors] = useState([]);\n  const [titles, setTitles] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [singlePoem, setSinglePoem] = useState('');\n  const [favouritePoems, setFavouritePoems] = useState([]);\n  const [isOpen2, setIsOpen2] = useState(false);\n\n  const getAuthors = async () => {\n    try {\n      var _response$data;\n\n      let response = await axios.get('author');\n      setAuthors(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.authors);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getPoemsTitle = async () => {\n    try {\n      var _response$data2;\n\n      let response = await axios.get('title');\n      setTitles(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.titles);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetch20Poems = async event => {\n    event.preventDefault();\n\n    try {\n      let response = await axios.get('random/20');\n      setPoems(response === null || response === void 0 ? void 0 : response.data);\n      setIsLoading(false);\n      console.log('PO HIN QITU SPO HIN QITU ROPT TI QIFSHA');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterByAuthor = async event => {\n    try {\n      let response = await axios.get(`author/${event}`);\n      setPoems(response === null || response === void 0 ? void 0 : response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const debounce = function (func) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    let timer;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func.apply(_this, args);\n      }, timeout);\n    };\n  };\n\n  const filterByTitle = async event => {\n    try {\n      let response = await axios.get(`title/${event}`);\n      setPoems(response === null || response === void 0 ? void 0 : response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onArtistChangeDebounce = debounce(event => filterByAuthor(event));\n  const onTitleChangeDebounce = debounce(event => filterByTitle(event));\n  const onFetch20RandomPoems = debounce(event => fetch20Poems(event));\n  useEffect(() => {\n    getAuthors();\n    getPoemsTitle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"Navbar navbar navbar-expand-lg navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          brandName: \"Poems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"element-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            name: \"Sort By Author\",\n            poemsData: authors,\n            onChangeState: onArtistChangeDebounce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            name: \"Sort By Title\",\n            poemsData: titles,\n            onChangeState: onTitleChangeDebounce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SearchInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            name: \"Fetch 20 poems\",\n            buttonClassName: \"btn btn-outline-primary\",\n            type: \"button\",\n            setIsLoading: setIsLoading,\n            onClickFunction: onFetch20RandomPoems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), (favouritePoems === null || favouritePoems === void 0 ? void 0 : favouritePoems.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: BUTTON_WRAPPER_STYLES,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              buttonClassName: \"btn btn-outline-success\",\n              name: \"Favourite Poems\",\n              onClickFunction: event => {\n                event.preventDefault();\n                setIsOpen2(true);\n              },\n              children: \"Open Modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FavouriteModal, {\n              favPoems: favouritePoems,\n              open: isOpen2,\n              isFavourite: true,\n              setIsOpen: setIsOpen2,\n              favouritePoems: favouritePoems,\n              setFavouritePoems: setFavouritePoems,\n              onClose: () => setIsOpen2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 55\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Listing, {\n        isLoading: isLoading,\n        setIsLoading: setIsLoading,\n        poems: poems,\n        isOpen: isOpen,\n        setIsOpen: setIsOpen,\n        singlePoem: singlePoem,\n        favouritePoems: favouritePoems,\n        setFavouritePoems: setFavouritePoems,\n        setSinglePoem: setSinglePoem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Navbar, \"cm1JfGpUN3KrU+VVncefOKKB7dM=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Navbar/Navbar.js"],"names":["Listing","Dropdown","SearchInput","Button","NavbarBrand","useEffect","useState","axios","Modal","FavouriteModal","Loader","BUTTON_WRAPPER_STYLES","position","zIndex","Navbar","poems","setPoems","isLoading","setIsLoading","authors","setAuthors","titles","setTitles","isOpen","setIsOpen","singlePoem","setSinglePoem","favouritePoems","setFavouritePoems","isOpen2","setIsOpen2","getAuthors","response","get","data","error","console","log","getPoemsTitle","fetch20Poems","event","preventDefault","filterByAuthor","debounce","func","timeout","timer","args","clearTimeout","setTimeout","apply","filterByTitle","onArtistChangeDebounce","onTitleChangeDebounce","onFetch20RandomPoems","length"],"mappings":"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","sourcesContent":["import './Navbar.scss'\nimport Listing from \"../Listing/Listing\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport SearchInput from \"../SearchInput/SearchInput\";\nimport Button from \"../Button/Button\";\nimport NavbarBrand from \"../NavbarBrand/NavbarBrand\";\nimport {useEffect, useState} from \"react\";\nimport axios from '../../utils/axios'\nimport Modal from \"../Modal/Modal\";\nimport FavouriteModal from \"../FavouriteModal/FavouriteModal\";\nimport Loader from \"../Loader/Loader\";\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative', zIndex: 1\n}\n\nexport default function Navbar() {\n\n    const [poems, setPoems] = useState([])\n    const [isLoading, setIsLoading] = useState(null)\n    const [authors, setAuthors] = useState([])\n    const [titles, setTitles] = useState([])\n    const [isOpen, setIsOpen] = useState(false);\n    const [singlePoem, setSinglePoem] = useState('')\n    const [favouritePoems, setFavouritePoems] = useState([])\n    const [isOpen2, setIsOpen2] = useState(false);\n\n\n    const getAuthors = async () => {\n\n        try {\n            let response = await axios.get('author')\n            setAuthors(response?.data?.authors)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getPoemsTitle = async () => {\n\n        try {\n            let response = await axios.get('title')\n            setTitles(response?.data?.titles)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const fetch20Poems = async (event) => {\n        event.preventDefault()\n\n        try {\n            let response = await axios.get('random/20')\n            setPoems(response?.data)\n            setIsLoading(false)\n            console.log('PO HIN QITU SPO HIN QITU ROPT TI QIFSHA')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const filterByAuthor = async (event) => {\n\n        try {\n            let response = await axios.get(`author/${event}`)\n            setPoems(response?.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const debounce = (func, timeout = 500) => {\n        let timer;\n\n        return (...args) => {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                func.apply(this, args);\n            }, timeout);\n        };\n    }\n\n    const filterByTitle = async (event) => {\n\n        try {\n            let response = await axios.get(`title/${event}`)\n            setPoems(response?.data)\n            setIsLoading(false)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const onArtistChangeDebounce = debounce((event) => filterByAuthor(event));\n    const onTitleChangeDebounce = debounce((event) => filterByTitle(event));\n    const onFetch20RandomPoems = debounce((event) => fetch20Poems(event))\n\n    useEffect(() => {\n        getAuthors();\n        getPoemsTitle();\n    }, [])\n\n\n\n    return (<>\n            <nav className=\"Navbar navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    <NavbarBrand brandName=\"Poems\"/>\n                    <form className=\"element-wrapper\">\n                        <Dropdown name=\"Sort By Author\" poemsData={authors} onChangeState={onArtistChangeDebounce}/>\n                        <Dropdown name=\"Sort By Title\" poemsData={titles} onChangeState={onTitleChangeDebounce}/>\n                        <SearchInput/>\n                        <Button name=\"Fetch 20 poems\" buttonClassName=\"btn btn-outline-primary\" type=\"button\"\n                                setIsLoading={setIsLoading} onClickFunction={onFetch20RandomPoems}/>\n                        {favouritePoems?.length > 0 ? <div style={BUTTON_WRAPPER_STYLES}>\n                            <Button\n                                type=\"button\"\n                                buttonClassName=\"btn btn-outline-success\"\n                                name=\"Favourite Poems\"\n                                onClickFunction={(event) => {\n                                    event.preventDefault()\n                                    setIsOpen2(true);\n                                }}\n                            >Open Modal\n                            </Button>\n                            <FavouriteModal\n                                favPoems={favouritePoems}\n                                open={isOpen2}\n                                isFavourite={true}\n                                setIsOpen={setIsOpen2}\n                                favouritePoems={favouritePoems}\n                                setFavouritePoems={setFavouritePoems}\n                                onClose={() => setIsOpen2(false)}\n                            />\n                        </div> : null}\n\n                    </form>\n                </div>\n            </nav>\n            <div className=\"list-wrapper\">\n                {isLoading ? <Loader/> :\n                    <Listing isLoading={isLoading}\n                             setIsLoading={setIsLoading}\n                             poems={poems}\n                             isOpen={isOpen}\n                             setIsOpen={setIsOpen}\n                             singlePoem={singlePoem}\n                             favouritePoems={favouritePoems}\n                             setFavouritePoems={setFavouritePoems}\n                             setSinglePoem={setSinglePoem}\n                    />\n                }\n            </div>\n\n\n        </>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}