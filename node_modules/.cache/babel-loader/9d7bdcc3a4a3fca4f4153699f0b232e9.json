{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\"; // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems\n  } = _ref;\n  console.log('incoming poems', poems);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [selectedPoem, setSelectedPoem] = useState(null);\n\n  function openModal(poem) {\n    setSelectedPoem(poem);\n    setIsOpen(!modalIsOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poem Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            var _poem$lines;\n\n            console.log('mapped poems', poems);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"gg-file-document\",\n                  onClick: openModal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Modal, {\n                    isOpen: modalIsOpen,\n                    style: customStyles,\n                    contentLabel: \"Example Modal\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: openModal(poem),\n                      children: \"close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 41\n                    }, this), \"selectedPoem != null ? \", /*#__PURE__*/_jsxDEV(ModalPoems, {\n                      singlePoem: selectedPoem\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 63\n                    }, this), \" : \", /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this)]\n            }, poem.lines.toString() + (poem === null || poem === void 0 ? void 0 : poem.author.toString()), true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"MrquZCN5M/03fSEo/BlEx/ZuHfQ=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["Modal","useState","ModalPoems","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","Listing","poems","console","log","modalIsOpen","setIsOpen","selectedPoem","setSelectedPoem","openModal","poem","map","i","title","author","lines","slice","toString"],"mappings":"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","sourcesContent":["import './Listing.scss'\nimport Modal from \"react-modal\";\nimport {useState} from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\";\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nexport default function Listing({poems}) {\n\n    console.log('incoming poems', poems)\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [selectedPoem, setSelectedPoem] = useState(null);\n\n    function openModal(poem) {\n        setSelectedPoem(poem);\n        setIsOpen(!modalIsOpen);\n    }\n\n    return (<>\n        <table className=\"table table-borderless\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Author</th>\n                <th scope=\"col\">Poems</th>\n                <th scope=\"col\">Poem Details</th>\n            </tr>\n            </thead>\n            <tbody>\n            <>\n            {poems?.map((poem, i) => {\n                console.log('mapped poems', poems)\n                return (\n\n                        <tr key={poem.lines.toString() + poem?.author.toString()}>\n                            <th scope=\"row\">{i + 1}</th>\n                            <td>{poem?.title}</td>\n                            <td>{poem?.author}</td>\n                            <td>{poem?.lines?.slice(0, 5)} -...</td>\n                            <td><i className=\"gg-file-document\" onClick={openModal}></i>\n                                <div>\n                                    <Modal\n                                        isOpen={modalIsOpen}\n                                        style={customStyles}\n                                        contentLabel=\"Example Modal\"\n                                    >\n                                        <button onClick={openModal(poem)}>close</button>\n                                       selectedPoem != null ? <ModalPoems singlePoem={selectedPoem}/> : <></>\n                                    </Modal>\n                                </div>\n                            </td>\n                        </tr>\n\n                )\n            })}\n                </>\n            </tbody>\n        </table>\n\n    </>)\n}"]},"metadata":{},"sourceType":"module"}