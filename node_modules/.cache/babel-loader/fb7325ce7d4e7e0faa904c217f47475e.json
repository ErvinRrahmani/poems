{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\"; // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: 1\n};\nconst OTHER_CONTENT_STYLES = {\n  position: 'relative',\n  zIndex: 2,\n  backgroundColor: 'red',\n  padding: '10px'\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems\n  } = _ref;\n  console.log('incoming poems', poems);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPoem, setSelectedPoem] = useState(null);\n\n  function setTitle(title) {\n    console.log('incoming ', title);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poem Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setTitle(poem === null || poem === void 0 ? void 0 : poem.title),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)]\n            }, poem.lines.toString().length, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"GQ9whKXLMPSEQjIQWd62fBa4aek=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["Modal","useState","ModalPoems","setAppElement","BUTTON_WRAPPER_STYLES","position","zIndex","OTHER_CONTENT_STYLES","backgroundColor","padding","Listing","poems","console","log","isOpen","setIsOpen","selectedPoem","setSelectedPoem","setTitle","title","map","poem","i","author","lines","toString","length"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;;;AACAF,KAAK,CAACG,aAAN,CAAoB,OAApB;AAGA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,UADgB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAA9B;AAKA,MAAMC,oBAAoB,GAAG;AACzBF,EAAAA,QAAQ,EAAE,UADe;AAEzBC,EAAAA,MAAM,EAAE,CAFiB;AAGzBE,EAAAA,eAAe,EAAE,KAHQ;AAIzBC,EAAAA,OAAO,EAAE;AAJgB,CAA7B;AAQA,eAAe,SAASC,OAAT,OAA0B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAIrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;;AAGA,WAASiB,QAAT,CAAmBC,KAAnB,EAA0B;AACtBP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBM,KAAxB;AACH;;AAGD,sBAAQ;AAAA,2BACJ;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,+BACA;AAAA,oBACKR,KADL,aACKA,KADL,uBACKA,KAAK,CAAES,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,gCAEI;AAAA,sCACI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiBA,CAAC,GAAG;AAArB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEF;AAAX;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKE,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEE;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAEL,QAAQ,CAACG,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEF,KAAP,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAASE,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsBC,MAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAgBH,WAjBA;AADL;AADA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAoCH;;GAlDuBhB,O;;KAAAA,O","sourcesContent":["import './Listing.scss'\nimport Modal from \"react-modal\";\nimport {useState} from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\";\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative',\n    zIndex: 1\n}\n\nconst OTHER_CONTENT_STYLES = {\n    position: 'relative',\n    zIndex: 2,\n    backgroundColor: 'red',\n    padding: '10px'\n}\n\n\nexport default function Listing({poems}) {\n\n\n\n    console.log('incoming poems', poems)\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedPoem, setSelectedPoem] = useState(null);\n\n\n    function setTitle (title) {\n        console.log('incoming ',title)\n    }\n\n\n    return (<>\n        <table className=\"table table-borderless\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Author</th>\n                <th scope=\"col\">Poems</th>\n                <th scope=\"col\">Poem Details</th>\n            </tr>\n            </thead>\n            <tbody>\n            <>\n                {poems?.map((poem, i) => {\n                    return (\n\n                        <tr key={poem.lines.toString().length}>\n                            <th scope=\"row\">{i + 1}</th>\n                            <td>{poem?.title}</td>\n                            <td>{poem?.author}</td>\n                            <button type=\"button\" onClick={setTitle(poem?.title)}> </button>\n                            {/*<div style={BUTTON_WRAPPER_STYLES}>*/}\n                                {/*<button onClick={() => setIsOpen(true)}>Open Modal</button>*/}\n                                {/*<ModalPoems childrenm={poem?.title} open={isOpen} onClose={() => setIsOpen(false)}>*/}\n                                {/*    <td>{poem?.lines?.slice(0, 5)} -...</td>*/}\n                                {/*</ModalPoems>*/}\n                            {/*</div>*/}\n                        </tr>\n\n                    )\n                })}\n            </>\n            </tbody>\n        </table>\n\n    </>)\n}"]},"metadata":{},"sourceType":"module"}