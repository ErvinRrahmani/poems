{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\"; // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: '1'\n};\nconst OTHER_CONTENT_STYLES = {\n  position: 'relative',\n  zIndex: '2',\n  backgroundColor: 'red',\n  padding: '10px'\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems\n  } = _ref;\n  console.log('incoming poems', poems);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [selectedPoem, setSelectedPoem] = useState(null);\n\n  function openModal(poem) {\n    // setSelectedPoem(poem);\n    setTimeout(() => {\n      setIsOpen(!modalIsOpen);\n    }, 100);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poem Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            var _poem$lines;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)]\n            }, poem.lines.toString() + (poem === null || poem === void 0 ? void 0 : poem.author.toString()), true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"MrquZCN5M/03fSEo/BlEx/ZuHfQ=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["Modal","useState","ModalPoems","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","BUTTON_WRAPPER_STYLES","position","zIndex","OTHER_CONTENT_STYLES","backgroundColor","padding","Listing","poems","console","log","modalIsOpen","setIsOpen","selectedPoem","setSelectedPoem","openModal","poem","setTimeout","map","i","title","author","lines","slice","toString"],"mappings":"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","sourcesContent":["import './Listing.scss'\nimport Modal from \"react-modal\";\nimport {useState} from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\";\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative',\n    zIndex: '1'\n}\n\nconst OTHER_CONTENT_STYLES = {\n    position: 'relative',\n    zIndex: '2',\n    backgroundColor: 'red',\n    padding: '10px'\n\n}\n\nexport default function Listing({poems}) {\n\n    console.log('incoming poems', poems)\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [selectedPoem, setSelectedPoem] = useState(null);\n\n    function openModal(poem) {\n        // setSelectedPoem(poem);\n        setTimeout(()=>{\n            setIsOpen(!modalIsOpen);\n        }, 100)\n\n    }\n\n    return (<>\n        <table className=\"table table-borderless\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Author</th>\n                <th scope=\"col\">Poems</th>\n                <th scope=\"col\">Poem Details</th>\n            </tr>\n            </thead>\n            <tbody>\n            <>\n            {poems?.map((poem, i) => {\n                return (\n\n                        <tr key={poem.lines.toString() + poem?.author.toString()}>\n                            <th scope=\"row\">{i + 1}</th>\n                            <td>{poem?.title}</td>\n                            <td>{poem?.author}</td>\n                            <td>{poem?.lines?.slice(0, 5)} -...</td>\n                           \n                        </tr>\n\n                )\n            })}\n                </>\n            </tbody>\n        </table>\n\n    </>)\n}"]},"metadata":{},"sourceType":"module"}