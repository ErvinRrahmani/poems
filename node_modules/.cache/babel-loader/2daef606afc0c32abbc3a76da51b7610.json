{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Modal/Modal.js\";\nimport ReactDom from \"react-dom\";\nimport './Modal.scss';\nimport Listing from \"../Listing/Listing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MODAL_STYLES = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: '#FFF',\n  padding: '50px',\n  zIndex: 1000,\n  height: '600px',\n  overflow: 'auto',\n  borderRadius: '20px'\n};\nconst OVERLAY_STYLES = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(204, 204, 204, 0.8)',\n  zIndex: 1000\n};\nexport default function Modal(_ref) {\n  let {\n    open,\n    onClose,\n    poemSingleData,\n    poemFavourites,\n    isOpen,\n    setIsOpen\n  } = _ref;\n  console.log('ZH', poemFavourites);\n\n  if (poemSingleData) {\n    if (!open) return null;\n    return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: OVERLAY_STYLES\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: MODAL_STYLES,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-close-modal\",\n              onClick: onClose,\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: poemSingleData === null || poemSingleData === void 0 ? void 0 : poemSingleData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: poemSingleData === null || poemSingleData === void 0 ? void 0 : poemSingleData.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: poemSingleData === null || poemSingleData === void 0 ? void 0 : poemSingleData.lines\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), document.getElementById('portal'));\n  } else {\n    if (!open) return null;\n    return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"isOpen=\", isOpen, \"setIsOpen=\", setIsOpen, /*#__PURE__*/_jsxDEV(Listing, {\n        poems: poemFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), document.getElementById('portal'));\n  }\n}\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Modal/Modal.js"],"names":["ReactDom","Listing","MODAL_STYLES","position","top","left","transform","backgroundColor","padding","zIndex","height","overflow","borderRadius","OVERLAY_STYLES","right","bottom","Modal","open","onClose","poemSingleData","poemFavourites","isOpen","setIsOpen","console","log","createPortal","title","author","lines","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,OADO;AAEjBC,EAAAA,GAAG,EAAE,KAFY;AAGjBC,EAAAA,IAAI,EAAE,KAHW;AAIjBC,EAAAA,SAAS,EAAE,uBAJM;AAKjBC,EAAAA,eAAe,EAAE,MALA;AAMjBC,EAAAA,OAAO,EAAE,MANQ;AAOjBC,EAAAA,MAAM,EAAE,IAPS;AAQjBC,EAAAA,MAAM,EAAE,OARS;AASjBC,EAAAA,QAAQ,EAAE,MATO;AAUjBC,EAAAA,YAAY,EAAE;AAVG,CAArB;AAcA,MAAMC,cAAc,GAAG;AACnBV,EAAAA,QAAQ,EAAE,OADS;AAEnBC,EAAAA,GAAG,EAAE,CAFc;AAGnBC,EAAAA,IAAI,EAAE,CAHa;AAInBS,EAAAA,KAAK,EAAE,CAJY;AAKnBC,EAAAA,MAAM,EAAE,CALW;AAMnBR,EAAAA,eAAe,EAAE,0BANE;AAOnBE,EAAAA,MAAM,EAAE;AAPW,CAAvB;AAUA,eAAe,SAASO,KAAT,OAAmF;AAAA,MAApE;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,cAAhC;AAAgDC,IAAAA,MAAhD;AAAwDC,IAAAA;AAAxD,GAAoE;AAE9FC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,cAAjB;;AAEA,MAAID,cAAJ,EAAoB;AAChB,QAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AAEX,wBAAOjB,QAAQ,CAACyB,YAAT,eACH;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEZ;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAEX,YAAZ;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,oBAAlB;AAAuC,cAAA,OAAO,EAAEgB,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI;AAAA,wBAAKC,cAAL,aAAKA,cAAL,uBAAKA,cAAc,CAAEO;AAArB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKP,cAAL,aAAKA,cAAL,uBAAKA,cAAc,CAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAIR,cAAJ,aAAIA,cAAJ,uBAAIA,cAAc,CAAES;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADG,EAiBHC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAjBG,CAAP;AAmBH,GAtBD,MAsBO;AACH,QAAI,CAACb,IAAL,EAAW,OAAO,IAAP;AAEX,wBAAOjB,QAAQ,CAACyB,YAAT,eACH;AAAA,4BACYJ,MADZ,gBAEeC,SAFf,eAGI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADG,EAMHS,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CANG,CAAP;AAQH;AAGJ;KAxCuBd,K","sourcesContent":["import ReactDom from \"react-dom\";\nimport './Modal.scss'\nimport Listing from \"../Listing/Listing\";\n\nconst MODAL_STYLES = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#FFF',\n    padding: '50px',\n    zIndex: 1000,\n    height: '600px',\n    overflow: 'auto',\n    borderRadius: '20px',\n\n}\n\nconst OVERLAY_STYLES = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(204, 204, 204, 0.8)',\n    zIndex: 1000,\n}\n\nexport default function Modal({open, onClose, poemSingleData, poemFavourites, isOpen, setIsOpen}) {\n\n    console.log('ZH',poemFavourites)\n\n    if (poemSingleData) {\n        if (!open) return null\n\n        return ReactDom.createPortal(\n            <>\n                <div className=\"Modal\">\n                    <div style={OVERLAY_STYLES}/>\n                    <div style={MODAL_STYLES}>\n                        <div className=\"button-wrapper\">\n                            <button className=\"button-close-modal\" onClick={onClose}>X\n                            </button>\n                        </div>\n                        <div className=\"wrapper\">\n                            <h4>{poemSingleData?.title}</h4>\n                            <h5>{poemSingleData?.author}</h5>\n                            <p>{poemSingleData?.lines}</p>\n                        </div>\n                    </div>\n                </div>\n            </>,\n            document.getElementById('portal')\n        )\n    } else {\n        if (!open) return null\n\n        return ReactDom.createPortal(\n            <>\n                isOpen={isOpen}\n                setIsOpen={setIsOpen}\n                <Listing poems={poemFavourites}/>\n            </>,\n            document.getElementById('portal')\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}