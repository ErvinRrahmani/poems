{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\",\n    _s = $RefreshSig$();\n\nimport './Listing.scss';\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\"; // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: '1'\n};\nconst OTHER_CONTENT_STYLES = {\n  position: 'relative',\n  zIndex: '2',\n  backgroundColor: 'red',\n  padding: '10px'\n};\nexport default function Listing(_ref) {\n  _s();\n\n  let {\n    poems\n  } = _ref;\n  console.log('incoming poems', poems);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPoem, setSelectedPoem] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Poem Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            var _poem$lines, _poem$lines2;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: BUTTON_WRAPPER_STYLES,\n              onClick: () => console.log('clicked'),\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"row\",\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: poem === null || poem === void 0 ? void 0 : poem.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: poem === null || poem === void 0 ? void 0 : poem.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsOpen(true),\n                  children: \"Open Modal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ModalPoems, {\n                  open: isOpen,\n                  onClose: () => setIsOpen(false),\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [poem === null || poem === void 0 ? void 0 : (_poem$lines2 = poem.lines) === null || _poem$lines2 === void 0 ? void 0 : _poem$lines2.slice(0, 5), \" -...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this)]\n              }, poem.lines.toString() + (poem === null || poem === void 0 ? void 0 : poem.author.toString()), true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Listing, \"GQ9whKXLMPSEQjIQWd62fBa4aek=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["Modal","useState","ModalPoems","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","BUTTON_WRAPPER_STYLES","position","zIndex","OTHER_CONTENT_STYLES","backgroundColor","padding","Listing","poems","console","log","isOpen","setIsOpen","selectedPoem","setSelectedPoem","map","poem","i","title","author","lines","slice","toString"],"mappings":"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","sourcesContent":["import './Listing.scss'\nimport Modal from \"react-modal\";\nimport {useState} from \"react\";\nimport ModalPoems from \"../ModalPoems/ModalPoems\";\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative',\n    zIndex: '1'\n}\n\nconst OTHER_CONTENT_STYLES = {\n    position: 'relative',\n    zIndex: '2',\n    backgroundColor: 'red',\n    padding: '10px'\n\n}\n\nexport default function Listing({poems}) {\n\n    console.log('incoming poems', poems)\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedPoem, setSelectedPoem] = useState(null);\n\n    return (<>\n        <table className=\"table table-borderless\">\n            <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Author</th>\n                <th scope=\"col\">Poems</th>\n                <th scope=\"col\">Poem Details</th>\n            </tr>\n            </thead>\n            <tbody>\n            <>\n                {poems?.map((poem, i) => {\n                    return (\n                        <div style={BUTTON_WRAPPER_STYLES}  onClick={() => console.log('clicked')}>\n                        <tr key={poem.lines.toString() + poem?.author.toString()}>\n                            <th scope=\"row\">{i + 1}</th>\n                            <td>{poem?.title}</td>\n                            <td>{poem?.author}</td>\n                            <td>{poem?.lines?.slice(0, 5)} -...</td>\n\n                                <button onClick={() => setIsOpen(true)}>Open Modal</button>\n                                <ModalPoems open={isOpen} onClose={() => setIsOpen(false)}>\n                                    <td>{poem?.lines?.slice(0, 5)} -...</td>\n                                </ModalPoems>\n\n                        </tr>\n                        </div>\n                    )\n                })}\n            </>\n            </tbody>\n        </table>\n\n    </>)\n}"]},"metadata":{},"sourceType":"module"}