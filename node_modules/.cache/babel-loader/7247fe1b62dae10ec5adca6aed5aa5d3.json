{"ast":null,"code":"var _jsxFileName = \"/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js\";\nimport './Listing.scss';\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport { useRecoilState } from \"recoil\";\nimport { darkModeState } from \"../../shared/GlobalState\";\nimport Loader from \"../Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BUTTON_WRAPPER_STYLES = {\n  position: 'relative',\n  zIndex: 1\n};\nexport default function Listing(_ref) {\n  let {\n    poems,\n    isLoading,\n    favouritePoems,\n    setFavouritePoems,\n    isOpen,\n    setIsOpen,\n    singlePoem,\n    poemsz,\n    setSinglePoem\n  } = _ref;\n  console.log('mjauuu poemz', poemsz);\n\n  const addToPoems = poems => {\n    let favPoemsArray = [];\n    favPoemsArray.push(poems);\n    favPoemsArray === null || favPoemsArray === void 0 ? void 0 : favPoemsArray.forEach((poemsInsideArray, i) => {\n      if (favouritePoems.includes(poemsInsideArray) === false) {\n        setFavouritePoems(favouritePoems => [...favouritePoems, poemsInsideArray]);\n      }\n    });\n  };\n\n  const deletePoems = deletedPoems => {\n    setFavouritePoems(favouritePoems.filter(item => item !== deletedPoems));\n  };\n\n  console.log('deleted', favouritePoems);\n  const data = favouritePoems === null || favouritePoems === void 0 ? void 0 : favouritePoems.map((el, i) => {\n    console.log('eheh', el);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Listing\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col-2\",\n              children: \"Poems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Poem Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Favourites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: poems === null || poems === void 0 ? void 0 : poems.map((poem, i) => {\n            var _poem$lines;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: poem === null || poem === void 0 ? void 0 : poem.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [poem === null || poem === void 0 ? void 0 : (_poem$lines = poem.lines) === null || _poem$lines === void 0 ? void 0 : _poem$lines.slice(0, 5), \" -...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: BUTTON_WRAPPER_STYLES,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"modal-open-button\",\n                  onClick: () => {\n                    setIsOpen(true);\n                    setSinglePoem(poem);\n                  },\n                  children: \"Open Modal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  poemSingleData: singlePoem,\n                  open: isOpen,\n                  onClose: () => setIsOpen(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => addToPoems(poem),\n                  className: \"add-to-favourites\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => deletePoems(poem),\n                  className: \"add-to-favourites\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this)]\n            }, poem.lines.toString().length, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/erwin/Desktop/Sweden-task/my-app/src/components/Listing/Listing.js"],"names":["useState","Modal","useRecoilState","darkModeState","Loader","BUTTON_WRAPPER_STYLES","position","zIndex","Listing","poems","isLoading","favouritePoems","setFavouritePoems","isOpen","setIsOpen","singlePoem","poemsz","setSinglePoem","console","log","addToPoems","favPoemsArray","push","forEach","poemsInsideArray","i","includes","deletePoems","deletedPoems","filter","item","data","map","el","poem","title","author","lines","slice","toString","length"],"mappings":"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","sourcesContent":["import './Listing.scss'\nimport {useState} from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport {useRecoilState} from \"recoil\";\nimport {darkModeState} from \"../../shared/GlobalState\";\nimport Loader from \"../Loader/Loader\";\n\n\nconst BUTTON_WRAPPER_STYLES = {\n    position: 'relative', zIndex: 1\n}\n\nexport default function Listing({\n                                    poems,\n                                    isLoading,\n                                    favouritePoems,\n                                    setFavouritePoems,\n                                    isOpen,\n                                    setIsOpen,\n                                    singlePoem,\n                                    poemsz,\n                                    setSinglePoem\n                                }) {\n\n\n    console.log('mjauuu poemz', poemsz)\n\n    const addToPoems = (poems) => {\n        let favPoemsArray = []\n        favPoemsArray.push(poems)\n\n        favPoemsArray?.forEach((poemsInsideArray, i) => {\n            if (favouritePoems.includes(poemsInsideArray) === false) {\n                setFavouritePoems(favouritePoems => [...favouritePoems, poemsInsideArray])\n            }\n        })\n    }\n\n    const deletePoems = (deletedPoems) => {\n        setFavouritePoems(favouritePoems.filter((item) => item !== deletedPoems));\n    }\n\n    console.log('deleted', favouritePoems)\n\n\n    const data = favouritePoems?.map((el, i) => {\n        console.log('eheh', el)\n    })\n\n    return (<>\n        <div className=\"Listing\">\n            <p>{data}</p>\n            <table className=\"table table-borderless\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author</th>\n                    <th scope=\"col-2\">Poems</th>\n                    <th scope=\"col\">Poem Details</th>\n                    <th scope=\"col\">Favourites</th>\n                </tr>\n                </thead>\n                <tbody>\n                {poems?.map((poem, i) => {\n                    return (<tr key={poem.lines.toString().length}>\n                        <th scope=\"row\">{i + 1}</th>\n                        <td>{poem?.title}</td>\n                        <td>{poem?.author}</td>\n                        <td>{poem?.lines?.slice(0, 5)} -...</td>\n                        <div style={BUTTON_WRAPPER_STYLES}>\n                            <button\n                                className=\"modal-open-button\"\n                                onClick={() => {\n                                    setIsOpen(true);\n                                    setSinglePoem(poem)\n                                }}\n                            >Open Modal\n                            </button>\n                            <Modal\n                                poemSingleData={singlePoem}\n                                open={isOpen}\n                                onClose={() => setIsOpen(false)}\n                            />\n                        </div>\n                        <td>\n                            <button type=\"button\" onClick={() => addToPoems(poem)}\n                                    className=\"add-to-favourites\">\n                                +\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" onClick={() => deletePoems(poem)}\n                                    className=\"add-to-favourites\">\n                                -\n                            </button>\n                        </td>\n                    </tr>)\n                })}\n                </tbody>\n            </table>\n        </div>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}